buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven-publish'
apply plugin: "io.spring.dependency-management"
apply plugin: 'jacoco'
apply plugin: 'docker'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
     afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [])
        })
    }
    
}
check.dependsOn jacocoTestReport

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    repositories {
        mavenCentral()
    }
}

dependencies {
    compile "io.pivotal.spring.cloud:spring-cloud-services-starter-config-client"
    compile "io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker"

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    
	compile("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "com.googlecode.json-simple:json-simple"
    compile "com.google.code.gson:gson"
    compile "org.springframework.amqp:spring-rabbit:1.4.6.RELEASE"
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.assertj:assertj-core:3.2.0")
    compile "io.pivotal.spring.cloud:spring-cloud-services-starter-config-client"
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile('org.springframework.security.oauth:spring-security-oauth2:2.0.8.RELEASE')
    compile('org.springframework.security:spring-security-jwt:1.0.3.RELEASE')
    compile 'io.springfox:springfox-swagger2:2.4.0'
    compile 'io.springfox:springfox-swagger-ui:2.4.0'
}

dependencyManagement {
    imports {
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-starter-parent:1.0.2.RELEASE"
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}


task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}